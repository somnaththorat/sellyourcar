{"ast":null,"code":"var _jsxFileName = \"G:\\\\sellyourcar\\\\frontend\\\\src\\\\components\\\\Admin\\\\Carlist\\\\Carlist.js\",\n    _s = $RefreshSig$();\n\n// import React, { useEffect, useState } from 'react';\n// import { fetchAllUsers, deleteUser, fetchAllCars } from '../../../api/Api.js';\n// import Navbar from '../AdminNavbar/AdminNavbar';\n// import {\n//     Table,\n//     TableHead,\n//     TableCell,\n//     TableRow,\n//     Button,\n//     TableBody,\n//     makeStyles,\n// } from \"@material-ui/core\";\n// import { Link } from \"react-router-dom\";\n// const useStyles = makeStyles({\n//     table: {\n//         width: \"90%\",\n//         margin: \"50px 0 0 50px\",\n//     },\n//     thead: {\n//         \"& > *\": {\n//             fontSize: 20,\n//             background: \"#000000\",\n//             color: \"#FFFFFF\",\n//         },\n//     },\n//     row: {\n//         \"& > *\": {\n//             fontSize: 18,\n//         },\n//     },\n// });\n// const Carlist = () => {\n//     const [cars, setCars] = useState([]);\n//     const classes = useStyles();\n//     const fetchallcars = async () => {\n//         const responce = await fetchAllCars();\n//         // console.log(responce);\n//         console.log(responce.data);\n//         const cars = responce.data;\n//         setCars( cars );\n//         // console.log(data);\n//     }\n//     useEffect(() => {\n//         fetchallcars();\n//     }, []);\n//     console.log(\"cars \", cars);\n//     const deleteuser = async (id) => {\n//         console.log(\"delete user id \", id);\n//         const responce = await deleteUser(id)\n//         console.log(responce.data);\n//     }\n//     let sr_no = 1;\n//     return (\n//         <>\n//         <Navbar/>\n//         <Table className={classes.table}>\n//                 <TableHead>\n//                     <TableRow className={classes.thead}>\n//                         <TableCell>Sr.No.</TableCell>\n//                         {/* <TableCell>UserId</TableCell> */}\n//                         <TableCell>Car Brand</TableCell>\n//                         <TableCell>Car Model</TableCell>\n//                         <TableCell>Engine</TableCell>\n//                         <TableCell>Fuel Type</TableCell>\n//                         <TableCell>transmission Type</TableCell>\n//                         <TableCell>Milage</TableCell>\n//                         <TableCell>Color</TableCell>\n//                         <TableCell>door</TableCell>\n//                         <TableCell>Seats</TableCell>\n//                         <TableCell>airbag</TableCell>\n//                         <TableCell>AC</TableCell>\n//                         <TableCell>Acceleration</TableCell>\n//                         <TableCell>Driving range</TableCell>\n//                         <TableCell>description</TableCell>\n//                         <TableCell>Price</TableCell>\n//                         <TableCell>Owner</TableCell>\n//                         <TableCell>Action</TableCell>\n//                     </TableRow>\n//                 </TableHead>\n//                 <TableBody>\n//                     {cars.map((car) => (\n//                         <TableRow className={classes.row}>\n//                             <TableCell>{sr_no++}</TableCell>\n//                             {/* <TableCell>{car._id}</TableCell> */}\n//                             <TableCell>{car.brand}</TableCell>\n//                             <TableCell>{car.model}</TableCell>\n//                             <TableCell>{car.engine } </TableCell>\n//                             <TableCell>{car.fuelType}</TableCell>\n//                             <TableCell>{car.transmissionType}</TableCell>\n//                             <TableCell>{car.milage}</TableCell>\n//                             <TableCell>{car.color}</TableCell>\n//                             <TableCell>{car.door}</TableCell>\n//                             <TableCell>{car.seats}</TableCell>\n//                             <TableCell>{car.airbag}</TableCell>\n//                             <TableCell>{car.airconditioning}</TableCell>\n//                             <TableCell>{car.acceleration}</TableCell>\n//                             <TableCell>{car.drivingRange}</TableCell>\n//                             <TableCell>{car.description}</TableCell>\n//                             <TableCell>{car.price}</TableCell>\n//                             <TableCell>{car.milage}</TableCell>\n//                             <TableCell>\n//                                 {/* <Button\n//                                     color=\"primary\"\n//                                     variant=\"contained\"\n//                                     style={{ marginRight: 10 }}\n//                                     component={Link}\n//                                     to={`/edit/${user._id}`}\n//                                 >\n//                                     Edit\n//                                 </Button>{\" \"} */}\n//                                 {/* change it to user.id to use JSON Server */}\n//                                 <Button\n//                                     color=\"secondary\"\n//                                     variant=\"contained\"\n//                                     // onClick={() =>  deleteuser(user._id)}\n//                                 >\n//                                     Delete\n//                                 </Button>{\" \"}\n//                             </TableCell>\n//                         </TableRow>\n//                     ))}\n//                 </TableBody>\n//             </Table>\n//         </>\n//     )\n// }\n// export default Carlist;\nimport * as React from 'react';\nimport Paper from '@mui/material/Paper';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport Navbar from '../AdminNavbar/AdminNavbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  id: 'brand',\n  label: 'Brand',\n  minWidth: 170\n}, {\n  id: 'model',\n  label: 'Model',\n  minWidth: 170\n}, {\n  id: 'name',\n  label: 'Name',\n  minWidth: 170\n}, {\n  id: 'name',\n  label: 'Name',\n  minWidth: 170\n}, {\n  id: 'name',\n  label: 'Name',\n  minWidth: 170\n}, {\n  id: 'name',\n  label: 'Name',\n  minWidth: 170\n}, {\n  id: 'name',\n  label: 'Name',\n  minWidth: 170\n}, {\n  id: 'name',\n  label: 'Name',\n  minWidth: 170\n}, {\n  id: 'name',\n  label: 'Name',\n  minWidth: 170\n}, {\n  id: 'name',\n  label: 'Name',\n  minWidth: 170\n}, {\n  id: 'name',\n  label: 'Name',\n  minWidth: 170\n}, {\n  id: 'name',\n  label: 'Name',\n  minWidth: 170\n}, {\n  id: 'code',\n  label: 'ISO\\u00a0Code',\n  minWidth: 100\n}, //                         {/* <TableCell>UserId</TableCell> */}\n// <TableCell>Car Brand</TableCell>\n// <TableCell>Car Model</TableCell>\n// <TableCell>Engine</TableCell>\n// <TableCell>Fuel Type</TableCell>\n// <TableCell>transmission Type</TableCell>\n// <TableCell>Milage</TableCell>\n// <TableCell>Color</TableCell>\n// <TableCell>door</TableCell>\n// <TableCell>Seats</TableCell>\n// <TableCell>airbag</TableCell>\n// <TableCell>AC</TableCell>\n// <TableCell>Acceleration</TableCell>\n// <TableCell>Driving range</TableCell>\n// <TableCell>description</TableCell>\n// <TableCell>Price</TableCell>\n// <TableCell>Owner</TableCell>\n{\n  id: 'population',\n  label: 'Population',\n  minWidth: 170,\n  align: 'right',\n  format: value => value.toLocaleString('en-US')\n}, {\n  id: 'size',\n  label: 'Size\\u00a0(km\\u00b2)',\n  minWidth: 170,\n  align: 'right',\n  format: value => value.toLocaleString('en-US')\n}, {\n  id: 'density',\n  label: 'Density',\n  minWidth: 170,\n  align: 'right',\n  format: value => value.toFixed(2)\n}];\n\nfunction createData(name, code, population, size) {\n  const density = population / size;\n  return {\n    name,\n    code,\n    population,\n    size,\n    density\n  };\n}\n\nconst rows = [createData('India', 'IN', 1324171354, 3287263), createData('China', 'CN', 1403500365, 9596961), createData('Italy', 'IT', 60483973, 301340), createData('United States', 'US', 327167434, 9833520), createData('Canada', 'CA', 37602103, 9984670), createData('Australia', 'AU', 25475400, 7692024), createData('Germany', 'DE', 83019200, 357578), createData('Ireland', 'IE', 4857000, 70273), createData('Mexico', 'MX', 126577691, 1972550), createData('Japan', 'JP', 126317000, 377973), createData('France', 'FR', 67022000, 640679), createData('United Kingdom', 'GB', 67545757, 242495), createData('Russia', 'RU', 146793744, 17098246), createData('Nigeria', 'NG', 200962417, 923768), createData('Brazil', 'BR', 210147125, 8515767)];\nexport default function Carlist() {\n  _s();\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        width: '100%',\n        overflow: 'hidden'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n        sx: {\n          maxHeight: 440\n        },\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          stickyHeader: true,\n          \"aria-label\": \"sticky table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n              return /*#__PURE__*/_jsxDEV(TableRow, {\n                hover: true,\n                role: \"checkbox\",\n                tabIndex: -1,\n                children: columns.map(column => {\n                  const value = row[column.id];\n                  return /*#__PURE__*/_jsxDEV(TableCell, {\n                    align: column.align,\n                    children: column.format && typeof value === 'number' ? column.format(value) : value\n                  }, column.id, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 322,\n                    columnNumber: 25\n                  }, this);\n                })\n              }, row.code, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 295,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n        rowsPerPageOptions: [10, 25, 100],\n        component: \"div\",\n        count: rows.length,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        onPageChange: handleChangePage,\n        onRowsPerPageChange: handleChangeRowsPerPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Carlist, \"65nbIEELuFY2eeUXbED/8VsHrEQ=\");\n\n_c = Carlist;\n\nvar _c;\n\n$RefreshReg$(_c, \"Carlist\");","map":{"version":3,"sources":["G:/sellyourcar/frontend/src/components/Admin/Carlist/Carlist.js"],"names":["React","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","Navbar","columns","id","label","minWidth","align","format","value","toLocaleString","toFixed","createData","name","code","population","size","density","rows","Carlist","page","setPage","useState","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","width","overflow","maxHeight","slice","map","row","column","length"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAIA;AACA;AACA;AACA;AACA;AAcA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAwBA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,eAAP,MAA4B,+BAA5B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;;;AAGA,MAAMC,OAAO,GAAG,CACd;AAAEC,EAAAA,EAAE,EAAE,OAAN;AAAeC,EAAAA,KAAK,EAAE,OAAtB;AAA+BC,EAAAA,QAAQ,EAAE;AAAzC,CADc,EAEd;AAAEF,EAAAA,EAAE,EAAE,OAAN;AAAeC,EAAAA,KAAK,EAAE,OAAtB;AAA+BC,EAAAA,QAAQ,EAAE;AAAzC,CAFc,EAGd;AAAEF,EAAAA,EAAE,EAAE,MAAN;AAAcC,EAAAA,KAAK,EAAE,MA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","sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import { fetchAllUsers, deleteUser, fetchAllCars } from '../../../api/Api.js';\r\n// import Navbar from '../AdminNavbar/AdminNavbar';\r\n// import {\r\n//     Table,\r\n//     TableHead,\r\n//     TableCell,\r\n//     TableRow,\r\n//     Button,\r\n//     TableBody,\r\n//     makeStyles,\r\n// } from \"@material-ui/core\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\n// const useStyles = makeStyles({\r\n//     table: {\r\n//         width: \"90%\",\r\n//         margin: \"50px 0 0 50px\",\r\n//     },\r\n//     thead: {\r\n//         \"& > *\": {\r\n//             fontSize: 20,\r\n//             background: \"#000000\",\r\n//             color: \"#FFFFFF\",\r\n//         },\r\n//     },\r\n//     row: {\r\n//         \"& > *\": {\r\n//             fontSize: 18,\r\n//         },\r\n//     },\r\n// });\r\n\r\n\r\n\r\n\r\n// const Carlist = () => {\r\n\r\n//     const [cars, setCars] = useState([]);\r\n//     const classes = useStyles();\r\n\r\n\r\n//     const fetchallcars = async () => {\r\n//         const responce = await fetchAllCars();\r\n//         // console.log(responce);\r\n//         console.log(responce.data);\r\n//         const cars = responce.data;\r\n//         setCars( cars );\r\n//         // console.log(data);\r\n//     }\r\n\r\n//     useEffect(() => {\r\n//         fetchallcars();\r\n//     }, []);\r\n\r\n//     console.log(\"cars \", cars);\r\n\r\n\r\n\r\n//     const deleteuser = async (id) => {\r\n//         console.log(\"delete user id \", id);\r\n//         const responce = await deleteUser(id)\r\n//         console.log(responce.data);\r\n//     }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//     let sr_no = 1;\r\n\r\n\r\n\r\n//     return (\r\n//         <>\r\n//         <Navbar/>\r\n//         <Table className={classes.table}>\r\n//                 <TableHead>\r\n//                     <TableRow className={classes.thead}>\r\n//                         <TableCell>Sr.No.</TableCell>\r\n//                         {/* <TableCell>UserId</TableCell> */}\r\n//                         <TableCell>Car Brand</TableCell>\r\n//                         <TableCell>Car Model</TableCell>\r\n//                         <TableCell>Engine</TableCell>\r\n//                         <TableCell>Fuel Type</TableCell>\r\n//                         <TableCell>transmission Type</TableCell>\r\n//                         <TableCell>Milage</TableCell>\r\n//                         <TableCell>Color</TableCell>\r\n//                         <TableCell>door</TableCell>\r\n//                         <TableCell>Seats</TableCell>\r\n//                         <TableCell>airbag</TableCell>\r\n//                         <TableCell>AC</TableCell>\r\n//                         <TableCell>Acceleration</TableCell>\r\n//                         <TableCell>Driving range</TableCell>\r\n//                         <TableCell>description</TableCell>\r\n//                         <TableCell>Price</TableCell>\r\n//                         <TableCell>Owner</TableCell>\r\n\r\n//                         <TableCell>Action</TableCell>\r\n//                     </TableRow>\r\n//                 </TableHead>\r\n//                 <TableBody>\r\n//                     {cars.map((car) => (\r\n//                         <TableRow className={classes.row}>\r\n//                             <TableCell>{sr_no++}</TableCell>\r\n//                             {/* <TableCell>{car._id}</TableCell> */}\r\n//                             <TableCell>{car.brand}</TableCell>\r\n//                             <TableCell>{car.model}</TableCell>\r\n//                             <TableCell>{car.engine } </TableCell>\r\n//                             <TableCell>{car.fuelType}</TableCell>\r\n//                             <TableCell>{car.transmissionType}</TableCell>\r\n//                             <TableCell>{car.milage}</TableCell>\r\n//                             <TableCell>{car.color}</TableCell>\r\n//                             <TableCell>{car.door}</TableCell>\r\n//                             <TableCell>{car.seats}</TableCell>\r\n//                             <TableCell>{car.airbag}</TableCell>\r\n//                             <TableCell>{car.airconditioning}</TableCell>\r\n//                             <TableCell>{car.acceleration}</TableCell>\r\n//                             <TableCell>{car.drivingRange}</TableCell>\r\n//                             <TableCell>{car.description}</TableCell>\r\n//                             <TableCell>{car.price}</TableCell>\r\n//                             <TableCell>{car.milage}</TableCell>\r\n                            \r\n//                             <TableCell>\r\n//                                 {/* <Button\r\n//                                     color=\"primary\"\r\n//                                     variant=\"contained\"\r\n//                                     style={{ marginRight: 10 }}\r\n//                                     component={Link}\r\n//                                     to={`/edit/${user._id}`}\r\n//                                 >\r\n//                                     Edit\r\n//                                 </Button>{\" \"} */}\r\n//                                 {/* change it to user.id to use JSON Server */}\r\n//                                 <Button\r\n//                                     color=\"secondary\"\r\n//                                     variant=\"contained\"\r\n//                                     // onClick={() =>  deleteuser(user._id)}\r\n//                                 >\r\n//                                     Delete\r\n//                                 </Button>{\" \"}\r\n//                             </TableCell>\r\n//                         </TableRow>\r\n//                     ))}\r\n//                 </TableBody>\r\n//             </Table>\r\n//         </>\r\n//     )\r\n// }\r\n\r\n// export default Carlist;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport * as React from 'react';\r\nimport Paper from '@mui/material/Paper';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Navbar from '../AdminNavbar/AdminNavbar';\r\n\r\n\r\nconst columns = [\r\n  { id: 'brand', label: 'Brand', minWidth: 170 },\r\n  { id: 'model', label: 'Model', minWidth: 170 },\r\n  { id: 'name', label: 'Name', minWidth: 170 },\r\n  { id: 'name', label: 'Name', minWidth: 170 },\r\n  { id: 'name', label: 'Name', minWidth: 170 },\r\n  { id: 'name', label: 'Name', minWidth: 170 },\r\n  { id: 'name', label: 'Name', minWidth: 170 },\r\n  { id: 'name', label: 'Name', minWidth: 170 },\r\n  { id: 'name', label: 'Name', minWidth: 170 },\r\n  { id: 'name', label: 'Name', minWidth: 170 },\r\n  { id: 'name', label: 'Name', minWidth: 170 },\r\n  { id: 'name', label: 'Name', minWidth: 170 },\r\n  { id: 'code', label: 'ISO\\u00a0Code', minWidth: 100 },\r\n\r\n\r\n//                         {/* <TableCell>UserId</TableCell> */}\r\n                        // <TableCell>Car Brand</TableCell>\r\n                        // <TableCell>Car Model</TableCell>\r\n                        // <TableCell>Engine</TableCell>\r\n                        // <TableCell>Fuel Type</TableCell>\r\n                        // <TableCell>transmission Type</TableCell>\r\n                        // <TableCell>Milage</TableCell>\r\n                        // <TableCell>Color</TableCell>\r\n                        // <TableCell>door</TableCell>\r\n                        // <TableCell>Seats</TableCell>\r\n                        // <TableCell>airbag</TableCell>\r\n                        // <TableCell>AC</TableCell>\r\n                        // <TableCell>Acceleration</TableCell>\r\n                        // <TableCell>Driving range</TableCell>\r\n                        // <TableCell>description</TableCell>\r\n                        // <TableCell>Price</TableCell>\r\n                        // <TableCell>Owner</TableCell>\r\n\r\n\r\n\r\n  {\r\n    id: 'population',\r\n    label: 'Population',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value) => value.toLocaleString('en-US'),\r\n  },\r\n  {\r\n    id: 'size',\r\n    label: 'Size\\u00a0(km\\u00b2)',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value) => value.toLocaleString('en-US'),\r\n  },\r\n  {\r\n    id: 'density',\r\n    label: 'Density',\r\n    minWidth: 170,\r\n    align: 'right',\r\n    format: (value) => value.toFixed(2),\r\n  },\r\n];\r\n\r\nfunction createData(name, code, population, size) {\r\n  const density = population / size;\r\n  return { name, code, population, size, density };\r\n}\r\n\r\nconst rows = [\r\n  createData('India', 'IN', 1324171354, 3287263),\r\n  createData('China', 'CN', 1403500365, 9596961),\r\n  createData('Italy', 'IT', 60483973, 301340),\r\n  createData('United States', 'US', 327167434, 9833520),\r\n  createData('Canada', 'CA', 37602103, 9984670),\r\n  createData('Australia', 'AU', 25475400, 7692024),\r\n  createData('Germany', 'DE', 83019200, 357578),\r\n  createData('Ireland', 'IE', 4857000, 70273),\r\n  createData('Mexico', 'MX', 126577691, 1972550),\r\n  createData('Japan', 'JP', 126317000, 377973),\r\n  createData('France', 'FR', 67022000, 640679),\r\n  createData('United Kingdom', 'GB', 67545757, 242495),\r\n  createData('Russia', 'RU', 146793744, 17098246),\r\n  createData('Nigeria', 'NG', 200962417, 923768),\r\n  createData('Brazil', 'BR', 210147125, 8515767),\r\n];\r\n\r\nexport default function Carlist() {\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n      <>\r\n      <Navbar/>\r\n    <Paper sx={{ width: '100%', overflow: 'hidden' }}>\r\n      <TableContainer sx={{ maxHeight: 440 }}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {/* {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))} */}\r\n\r\n              \r\n\r\n\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map((row) => {\r\n                return (\r\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\r\n                    {columns.map((column) => {\r\n                      const value = row[column.id];\r\n                      return (\r\n                        <TableCell key={column.id} align={column.align}>\r\n                          {column.format && typeof value === 'number'\r\n                            ? column.format(value)\r\n                            : value}\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={rows.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}