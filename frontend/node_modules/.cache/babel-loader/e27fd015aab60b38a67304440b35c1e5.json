{"ast":null,"code":"var _jsxFileName = \"G:\\\\sellyourcar\\\\frontend\\\\src\\\\components\\\\Resetpassword\\\\Resetpassword.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Grid, Paper, Avatar, TextField, Button } from '@material-ui/core';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { forgotPassword } from '../../api/Api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Resetpassword = () => {\n  _s();\n\n  const paperStyle = {\n    padding: '20px',\n    height: '50vh',\n    width: 580,\n    margin: '20px auto'\n  };\n  const avatarStyle = {\n    backgroundColor: 'green'\n  };\n  const btnStyle = {\n    margin: '20px auto'\n  };\n  const [password, setPassword] = useState('');\n\n  const onValueChange = e => {\n    // console.log(e.target.value);\n    setPassword(e.target.value);\n  };\n\n  const resetpassword = async () => {\n    console.log(\"clicked\");\n    console.log(password); // await forgotPassword(password);\n    // history.push('/account');\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 10,\n        style: paperStyle,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          align: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            style: avatarStyle,\n            children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 53\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Forgot Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          onChange: e => onValueChange(e),\n          name: \"password\",\n          value: password,\n          label: \"Password\",\n          placeholder: \"Enter Email\",\n          fullWidth: true,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          onChange: e => onValueChange(e),\n          name: \"password\",\n          value: password,\n          label: \"Conf\",\n          placeholder: \"Enter Email\",\n          fullWidth: true,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          color: \"primary\",\n          variant: \"contained\",\n          style: btnStyle,\n          fullWidth: true,\n          onClick: () => resetpassword(),\n          children: \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(Resetpassword, \"Y/4oil5yuJ8nKfSTE84bnqMxt48=\");\n\n_c = Resetpassword;\nexport default Resetpassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"Resetpassword\");","map":{"version":3,"sources":["G:/sellyourcar/frontend/src/components/Resetpassword/Resetpassword.js"],"names":["React","useState","Grid","Paper","Avatar","TextField","Button","LockOutlinedIcon","forgotPassword","Resetpassword","paperStyle","padding","height","width","margin","avatarStyle","backgroundColor","btnStyle","password","setPassword","onValueChange","e","target","value","resetpassword","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,EAA8BC,SAA9B,EAAyCC,MAAzC,QAAuD,mBAAvD;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,SAAQC,cAAR,QAA6B,eAA7B;;;;AAIA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAExB,QAAMC,UAAU,GAAG;AAAEC,IAAAA,OAAO,EAAE,MAAX;AAAmBC,IAAAA,MAAM,EAAE,MAA3B;AAAmCC,IAAAA,KAAK,EAAE,GAA1C;AAA+CC,IAAAA,MAAM,EAAE;AAAvD,GAAnB;AACA,QAAMC,WAAW,GAAG;AAAEC,IAAAA,eAAe,EAAE;AAAnB,GAApB;AACA,QAAMC,QAAQ,GAAG;AAAEH,IAAAA,MAAM,EAAE;AAAV,GAAjB;AAEA,QAAM,CAACI,QAAD,EAAWC,WAAX,IAA0BlB,QAAQ,CAAC,EAAD,CAAxC;;AAEA,QAAMmB,aAAa,GAAIC,CAAD,IAAO;AACzB;AACAF,IAAAA,WAAW,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACH,GAHD;;AAKA,QAAMC,aAAa,GAAG,YAAY;AAC9BC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYR,QAAZ,EAF8B,CAG9B;AACA;AACH,GALD;;AAQA,sBACI;AAAA,2BACI,QAAC,IAAD;AAAA,6BACI,QAAC,KAAD;AAAO,QAAA,SAAS,EAAE,EAAlB;AAAsB,QAAA,KAAK,EAAER,UAA7B;AAAA,gCACI,QAAC,IAAD;AAAM,UAAA,KAAK,EAAC,QAAZ;AAAA,kCACI,QAAC,MAAD;AAAQ,YAAA,KAAK,EAAEK,WAAf;AAAA,mCAA4B,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAA5B;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAOI,QAAC,SAAD;AAAW,UAAA,QAAQ,EAAGM,CAAD,IAAOD,aAAa,CAACC,CAAD,CAAzC;AAA8C,UAAA,IAAI,EAAC,UAAnD;AAA8D,UAAA,KAAK,EAAEH,QAArE;AAAiF,UAAA,KAAK,EAAC,UAAvF;AAAkG,UAAA,WAAW,EAAC,aAA9G;AAA4H,UAAA,SAAS,MAArI;AAAsI,UAAA,QAAQ;AAA9I;AAAA;AAAA;AAAA;AAAA,gBAPJ,eAQI,QAAC,SAAD;AAAW,UAAA,QAAQ,EAAGG,CAAD,IAAOD,aAAa,CAACC,CAAD,CAAzC;AAA8C,UAAA,IAAI,EAAC,UAAnD;AAA8D,UAAA,KAAK,EAAEH,QAArE;AAAiF,UAAA,KAAK,EAAC,MAAvF;AAA8F,UAAA,WAAW,EAAC,aAA1G;AAAwH,UAAA,SAAS,MAAjI;AAAkI,UAAA,QAAQ;AAA1I;AAAA;AAAA;AAAA;AAAA,gBARJ,eAcI,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,KAAK,EAAC,SAA5B;AAAsC,UAAA,OAAO,EAAC,WAA9C;AAA0D,UAAA,KAAK,EAAED,QAAjE;AAA2E,UAAA,SAAS,MAApF;AAAqF,UAAA,OAAO,EAAE,MAAMO,aAAa,EAAjH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAwBH,CA7CD;;GAAMf,a;;KAAAA,a;AA+CN,eAAeA,aAAf","sourcesContent":["import React, {useState} from 'react';\r\nimport { Grid, Paper, Avatar, TextField, Button } from '@material-ui/core';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport {forgotPassword} from '../../api/Api';\r\n\r\n\r\n\r\nconst Resetpassword = () => {\r\n\r\n    const paperStyle = { padding: '20px', height: '50vh', width: 580, margin: '20px auto' }\r\n    const avatarStyle = { backgroundColor: 'green' }\r\n    const btnStyle = { margin: '20px auto' }\r\n\r\n    const [password, setPassword] = useState('');\r\n\r\n    const onValueChange = (e) => {\r\n        // console.log(e.target.value);\r\n        setPassword(e.target.value)\r\n    }\r\n\r\n    const resetpassword = async () => {\r\n        console.log(\"clicked\");\r\n        console.log(password);\r\n        // await forgotPassword(password);\r\n        // history.push('/account');\r\n    }  \r\n\r\n\r\n    return (\r\n        <>\r\n            <Grid>\r\n                <Paper elevation={10} style={paperStyle}>\r\n                    <Grid align=\"center\">\r\n                        <Avatar style={avatarStyle}><LockOutlinedIcon /></Avatar>\r\n                        <h2>Forgot Password</h2>\r\n                    </Grid>\r\n\r\n                    \r\n                    <TextField onChange={(e) => onValueChange(e)} name='password' value={password}   label=\"Password\" placeholder=\"Enter Email\" fullWidth required />\r\n                    <TextField onChange={(e) => onValueChange(e)} name='password' value={password}   label=\"Conf\" placeholder=\"Enter Email\" fullWidth required />\r\n                    \r\n\r\n\r\n                   \r\n\r\n                    <Button type=\"submit\" color=\"primary\" variant=\"contained\" style={btnStyle} fullWidth onClick={() => resetpassword()}>Reset Password</Button>\r\n                    \r\n                   \r\n                </Paper>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Resetpassword;\r\n"]},"metadata":{},"sourceType":"module"}