{"ast":null,"code":"var _jsxFileName = \"G:\\\\sellyourcar\\\\frontend\\\\src\\\\components\\\\Admin\\\\AdminResetPassword\\\\AdminResetPassword.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; // import AdminNavbar from '../AdminNavbar/AdminNavbar';\n\nimport { Grid, Paper, Avatar, TextField, Button } from '@material-ui/core';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport { resetAdminPassword } from '../../../api/Api.js';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AdminResetPassword = () => {\n  _s();\n\n  const paperStyle = {\n    padding: '20px',\n    height: '50vh',\n    width: 580,\n    margin: '20px auto'\n  };\n  const avatarStyle = {\n    backgroundColor: 'green'\n  };\n  const btnStyle = {\n    margin: '20px auto'\n  };\n  const [password, setPassword] = useState('');\n  const {\n    pass,\n    conpass\n  } = password;\n\n  const onValueChange = e => {\n    // console.log(e.target.value);\n    // setPassword(...password, e.target.value)\n    setPassword({ ...password,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const params = useParams();\n\n  const AdminResetPassword = async () => {\n    console.log(\"reset password clicked\");\n    const token = params.id; // console.log(pass, token);\n\n    if (pass === conpass && pass != null) {\n      alert(\"Password matched\"); //send token with resetPassword\n\n      const rp = await resetAdminPassword(pass, token);\n      console.log(rp);\n      console.log(rp.data);\n\n      if (rp.data === \"password updated\") {\n        // if(rp.statusText == \"ok\"){\n        alert(\"Password changed successfully\");\n        window.location.href = \"/admin/login\";\n      } else {\n        alert(\"Link Expired\");\n      }\n    } else {\n      alert(\"Password not matched\");\n    } // await forgotPassword(password);\n    // history.push('/account');\n\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 10,\n        style: paperStyle,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          align: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            style: avatarStyle,\n            children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 53\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Admin Reset Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          onChange: e => onValueChange(e),\n          name: \"pass\",\n          value: pass,\n          label: \"Password\",\n          placeholder: \"Password\",\n          fullWidth: true,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          onChange: e => onValueChange(e),\n          name: \"conpass\",\n          value: conpass,\n          label: \"Confirm Password\",\n          placeholder: \"Confirm Password\",\n          fullWidth: true,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          color: \"primary\",\n          variant: \"contained\",\n          style: btnStyle,\n          fullWidth: true,\n          onClick: () => resetpassword(),\n          children: \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(AdminResetPassword, \"tP5rcx9g16vWx3dfCCZ38vTXb7A=\", false, function () {\n  return [useParams];\n});\n\n_c = AdminResetPassword;\nexport default AdminResetPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminResetPassword\");","map":{"version":3,"sources":["G:/sellyourcar/frontend/src/components/Admin/AdminResetPassword/AdminResetPassword.js"],"names":["React","useState","Grid","Paper","Avatar","TextField","Button","LockOutlinedIcon","resetAdminPassword","useParams","AdminResetPassword","paperStyle","padding","height","width","margin","avatarStyle","backgroundColor","btnStyle","password","setPassword","pass","conpass","onValueChange","e","target","name","value","params","console","log","token","id","alert","rp","data","window","location","href","resetpassword"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\n// import AdminNavbar from '../AdminNavbar/AdminNavbar';\r\n\r\nimport { Grid, Paper, Avatar, TextField, Button } from '@material-ui/core';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport {resetAdminPassword} from '../../../api/Api.js';\r\nimport { useParams } from 'react-router-dom';\r\n\r\n\r\n\r\nconst AdminResetPassword = () => {\r\n\r\n    const paperStyle = { padding: '20px', height: '50vh', width: 580, margin: '20px auto' }\r\n    const avatarStyle = { backgroundColor: 'green' }\r\n    const btnStyle = { margin: '20px auto' }\r\n\r\n    const [password, setPassword] = useState('');\r\n    const { pass, conpass} = password;\r\n\r\n    const onValueChange = (e) => {\r\n        // console.log(e.target.value);\r\n        // setPassword(...password, e.target.value)\r\n        setPassword({ ...password, [e.target.name]: e.target.value })\r\n    }\r\n\r\n        const params = useParams();\r\n\r\n\r\n    const AdminResetPassword = async () => {\r\n        console.log(\"reset password clicked\");\r\n        const token = params.id;\r\n        // console.log(pass, token);\r\n\r\n\r\n        if(pass === conpass && pass != null){\r\n            alert(\"Password matched\")\r\n            //send token with resetPassword\r\n\r\n\r\n            const rp = await resetAdminPassword(pass, token);\r\n            console.log(rp);\r\n            console.log(rp.data);\r\n            if(rp.data === \"password updated\"){\r\n                // if(rp.statusText == \"ok\"){\r\n                alert(\"Password changed successfully\")\r\n                window.location.href = \"/admin/login\";\r\n            }else{\r\n                alert(\"Link Expired\")\r\n            }\r\n\r\n        }else{\r\n            alert(\"Password not matched\");\r\n        }\r\n\r\n    \r\n        // await forgotPassword(password);\r\n        // history.push('/account');\r\n    }  \r\n\r\n\r\n    return (\r\n        <>\r\n            {/* <Navbar /> */}\r\n            <Grid>\r\n                <Paper elevation={10} style={paperStyle}>\r\n                    <Grid align=\"center\">\r\n                        <Avatar style={avatarStyle}><LockOutlinedIcon /></Avatar>\r\n                        <h2>Admin Reset Password</h2>\r\n                    </Grid>\r\n\r\n                    \r\n                    <TextField onChange={(e) => onValueChange(e)} name='pass' value={pass}   label=\"Password\" placeholder=\"Password\" fullWidth required />\r\n                    <TextField onChange={(e) => onValueChange(e)} name='conpass' value={conpass}   label=\"Confirm Password\" placeholder=\"Confirm Password\" fullWidth required />\r\n                    \r\n\r\n\r\n                   \r\n\r\n                    <Button type=\"submit\" color=\"primary\" variant=\"contained\" style={btnStyle} fullWidth onClick={() => resetpassword()}>Reset Password</Button>\r\n                    \r\n                   \r\n                </Paper>\r\n            </Grid>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AdminResetPassword;\r\n"]},"metadata":{},"sourceType":"module"}