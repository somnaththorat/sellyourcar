{"ast":null,"code":"var _jsxFileName = \"G:\\\\sellyourcar\\\\frontend\\\\src\\\\components\\\\Admin\\\\Reportlist\\\\Reportlist.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Paper from '@mui/material/Paper';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport { Button } from '@material-ui/core';\nimport Navbar from '../AdminNavbar/AdminNavbar';\nimport { fetchAllUsers, deleteUser, fetchAllReports } from '../../../api/Api.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Reportlist() {\n  _s();\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const [data, setData] = useState([]);\n  const [report, setReport] = useState([]);\n\n  const fetchallreports = async () => {\n    const responce = await fetchAllReports(); // console.log(responce);\n\n    console.log(responce.data);\n    const allUsers = responce.data;\n    setUsers(allUsers); // console.log(data);\n  };\n\n  useEffect(() => {\n    fetchallreports();\n  }, []);\n  console.log(\"users \", users);\n  console.log(\"users membership\", users._id);\n\n  const deleteuser = async id => {\n    console.log(\"delete user id \", id);\n    const responce = await deleteUser(id);\n    console.log(responce.data);\n  };\n\n  let srno = 1;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        width: '100%',\n        overflow: 'hidden'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n        sx: {\n          maxHeight: 540\n        },\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          stickyHeader: true,\n          \"aria-label\": \"sticky table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Sr.No\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"FullName\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Phone\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Cars\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Membership\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Membership Expiry\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Action\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: users.map(user => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: srno++\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: user.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: user.fullname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: [user.district, \" (\", user.state, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: user.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: user.mobilenumber\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: user.carId.length\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: user.membership === true ? \"Yes\" : \"No\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: user.membershipexpiry\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  color: \"secondary\",\n                  variant: \"contained\",\n                  onClick: () => deleteuser(user._id),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 33\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 25\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n        rowsPerPageOptions: [10, 25, 100],\n        component: \"div\",\n        count: users.length,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        onPageChange: handleChangePage,\n        onRowsPerPageChange: handleChangeRowsPerPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Reportlist, \"0CWjEKpWiLZbFL0ftRUtOwCfsWc=\");\n\n_c = Reportlist;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reportlist\");","map":{"version":3,"sources":["G:/sellyourcar/frontend/src/components/Admin/Reportlist/Reportlist.js"],"names":["React","useState","useEffect","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","Button","Navbar","fetchAllUsers","deleteUser","fetchAllReports","Reportlist","page","setPage","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","data","setData","report","setReport","fetchallreports","responce","console","log","allUsers","setUsers","users","_id","deleteuser","id","srno","width","overflow","maxHeight","map","user","username","fullname","district","state","email","mobilenumber","carId","length","membership","membershipexpiry"],"mappings":"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","sourcesContent":["\r\nimport React, {useState, useEffect} from 'react';\r\nimport Paper from '@mui/material/Paper';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport {Button} from '@material-ui/core';\r\nimport Navbar from '../AdminNavbar/AdminNavbar';\r\nimport { fetchAllUsers, deleteUser, fetchAllReports } from '../../../api/Api.js';\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function Reportlist() {\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const [data, setData] = useState([]);\r\n    const [report, setReport] = useState([]);\r\n\r\n\r\n    const fetchallreports = async () => {\r\n        const responce = await fetchAllReports();\r\n        // console.log(responce);\r\n        console.log(responce.data);\r\n        const allUsers = responce.data;\r\n        setUsers( allUsers );\r\n        // console.log(data);\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchallreports();\r\n    }, []);\r\n\r\n    console.log(\"users \", users);\r\n    console.log(\"users membership\", users._id);\r\n\r\n\r\n\r\n    const deleteuser = async (id) => {\r\n        console.log(\"delete user id \", id);\r\n        const responce = await deleteUser(id)\r\n        console.log(responce.data);\r\n    }\r\n\r\n\r\n\r\n\r\nlet srno = 1\r\n  return (\r\n      <>\r\n      <Navbar/>\r\n    <Paper sx={{ width: '100%', overflow: 'hidden' }}>\r\n      <TableContainer sx={{ maxHeight: 540 }}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {/* {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))} */}\r\n\r\n              \r\n                        <TableCell>Sr.No</TableCell>\r\n                        <TableCell>Username</TableCell>\r\n                        <TableCell>FullName</TableCell>\r\n                        <TableCell>Address</TableCell>\r\n                        <TableCell>Email</TableCell>\r\n                        <TableCell>Phone</TableCell>\r\n                        <TableCell>Cars</TableCell>\r\n                        <TableCell>Membership</TableCell>\r\n                        <TableCell>Membership Expiry</TableCell>\r\n                        <TableCell>Action</TableCell>\r\n\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            \r\n\r\n\r\n              \r\n          {users.map((user) => (\r\n                        <TableRow >\r\n                            <TableCell>{srno++}</TableCell>\r\n                            {/* <TableCell>{user._id}</TableCell> */}\r\n                            <TableCell>{user.username}</TableCell>\r\n                            <TableCell>{user.fullname}</TableCell>\r\n                            <TableCell>{user.district } ({user.state})</TableCell>\r\n                            <TableCell>{user.email}</TableCell>\r\n                            <TableCell>{user.mobilenumber}</TableCell>\r\n                            <TableCell>{user.carId.length}</TableCell>\r\n                            <TableCell>{user.membership === true ? \"Yes\" :\"No\" }</TableCell>\r\n                            <TableCell>{user.membershipexpiry}</TableCell>\r\n                            {/* <TableCell>{user.membershipexpiry.getFullYear() ,+'-' + (user.membershipexpiry.getMonth()+1) + '-'+user.membershipexpiry.getDate()}</TableCell> */}\r\n                            \r\n                            <TableCell>\r\n                                {/* <Button\r\n                                    color=\"primary\"\r\n                                    variant=\"contained\"\r\n                                    style={{ marginRight: 10 }}\r\n                                    component={Link}\r\n                                    to={`/edit/${user._id}`}\r\n                                >\r\n                                    Edit\r\n                                </Button>{\" \"} */}\r\n                                {/* change it to user.id to use JSON Server */}\r\n                                <Button\r\n                                    color=\"secondary\"\r\n                                    variant=\"contained\"\r\n                                    onClick={() =>  deleteuser(user._id)}\r\n                                >\r\n                                    Delete\r\n                                </Button>{\" \"}\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                        \r\n \r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={users.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}