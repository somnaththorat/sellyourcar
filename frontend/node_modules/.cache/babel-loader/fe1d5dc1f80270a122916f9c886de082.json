{"ast":null,"code":"var _jsxFileName = \"G:\\\\sellyourcar\\\\frontend\\\\src\\\\components\\\\Admin\\\\Userlist\\\\Userlist.js\",\n    _s = $RefreshSig$();\n\n// import React, { useEffect, useState } from 'react';\n// import { fetchAllUsers, deleteUser } from '../../../api/Api.js';\n// import Navbar from '../AdminNavbar/AdminNavbar';\n// import {\n//     Table,\n//     TableHead,\n//     TableCell,\n//     TableRow,\n//     Button,\n//     TableBody,\n//     makeStyles,\n// } from \"@material-ui/core\";\n// import { Link } from \"react-router-dom\";\n// const useStyles = makeStyles({\n//     table: {\n//         width: \"90%\",\n//         margin: \"50px 0 0 50px\",\n//     },\n//     thead: {\n//         \"& > *\": {\n//             fontSize: 20,\n//             background: \"#000000\",\n//             color: \"#FFFFFF\",\n//         },\n//     },\n//     row: {\n//         \"& > *\": {\n//             fontSize: 18,\n//         },\n//     },\n// });\n// const Userlist = () => {\n// const [data, setData] = useState([]);\n// const [users, setUsers] = useState([]);\n// const classes = useStyles();\n// const fetchallusers = async () => {\n//     const responce = await fetchAllUsers();\n//     // console.log(responce);\n//     console.log(responce.data);\n//     const allUsers = responce.data;\n//     setUsers( allUsers );\n//     // console.log(data);\n// }\n// useEffect(() => {\n//     fetchallusers();\n// }, []);\n// console.log(\"users \", users);\n// console.log(\"users membership\", users._id);\n// const deleteuser = async (id) => {\n//     console.log(\"delete user id \", id);\n//     const responce = await deleteUser(id)\n//     console.log(responce.data);\n// }\n//     let sr_no = 1;\n//     return (\n//         <>\n//         <Navbar/>\n//         <Table className={classes.table}>\n//                 <TableHead>\n//                     <TableRow className={classes.thead}>\n//                         <TableCell>Sr.No.</TableCell>\n//                         {/* <TableCell>UserId</TableCell> */}\n// <TableCell>Username</TableCell>\n// <TableCell>FullName</TableCell>\n// <TableCell>Address</TableCell>\n// <TableCell>Email</TableCell>\n// <TableCell>Phone</TableCell>\n// <TableCell>Cars</TableCell>\n// <TableCell>Membership</TableCell>\n// <TableCell>Membership Expiry</TableCell>\n// <TableCell>Action</TableCell>\n//                     </TableRow>\n//                 </TableHead>\n//                 <TableBody>\n//                     {users.map((user) => (\n//                         <TableRow className={classes.row}>\n//                             <TableCell>{sr_no++}</TableCell>\n//                             {/* <TableCell>{user._id}</TableCell> */}\n//                             <TableCell>{user.username}</TableCell>\n//                             <TableCell>{user.fullname}</TableCell>\n//                             <TableCell>{user.district } ({user.state})</TableCell>\n//                             <TableCell>{user.email}</TableCell>\n//                             <TableCell>{user.mobilenumber}</TableCell>\n//                             <TableCell>{user.carId.length}</TableCell>\n//                             <TableCell>{user.membership === true ? \"Yes\" :\"No\" }</TableCell>\n//                             <TableCell>{user.membershipexpiry}</TableCell>\n//                             {/* <TableCell>{user.membershipexpiry.getFullYear() ,+'-' + (user.membershipexpiry.getMonth()+1) + '-'+user.membershipexpiry.getDate()}</TableCell> */}\n//                             <TableCell>\n//                                 {/* <Button\n//                                     color=\"primary\"\n//                                     variant=\"contained\"\n//                                     style={{ marginRight: 10 }}\n//                                     component={Link}\n//                                     to={`/edit/${user._id}`}\n//                                 >\n//                                     Edit\n//                                 </Button>{\" \"} */}\n//                                 {/* change it to user.id to use JSON Server */}\n//                                 <Button\n//                                     color=\"secondary\"\n//                                     variant=\"contained\"\n//                                     onClick={() =>  deleteuser(user._id)}\n//                                 >\n//                                     Delete\n//                                 </Button>{\" \"}\n//                             </TableCell>\n//                         </TableRow>\n//                     ))}\n//                 </TableBody>\n//             </Table>\n//         </>\n//     )\n// }\n// export default Userlist;\nimport React, { useState, useEffect } from 'react';\nimport Paper from '@mui/material/Paper';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport { Button } from '@material-ui/core';\nimport Grid from '@mui/material/Grid';\nimport Navbar from '../AdminNavbar/AdminNavbar';\nimport { fetchAllUsers, deleteUser } from '../../../api/Api.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Userlist() {\n  _s();\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const [data, setData] = useState([]);\n  const [users, setUsers] = useState([]);\n\n  const fetchallusers = async () => {\n    const responce = await fetchAllUsers(); // console.log(responce);\n\n    console.log(responce.data);\n    const allUsers = responce.data;\n    setUsers(allUsers); // console.log(data);\n  };\n\n  useEffect(() => {\n    fetchallusers();\n  }, []);\n  console.log(\"users \", users);\n  console.log(\"users membership\", users._id);\n\n  const deleteuser = async id => {\n    console.log(\"delete user id \", id);\n    const responce = await deleteUser(id);\n    console.log(responce.data);\n  };\n\n  let srno = 1;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      style: {\n        padding: '20px',\n        width: \"100%\",\n        marginBottom: 'none',\n        backgroundColor: \"#7900FF\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"User List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        width: '100%',\n        overflow: 'hidden'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n        sx: {\n          maxHeight: 540\n        },\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          stickyHeader: true,\n          \"aria-label\": \"sticky table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Sr.No\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Username\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"FullName\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Phone\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Cars\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Membership\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Membership Expiry\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Action\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: users.map(user => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: srno++\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: user.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: user.fullname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: [user.district, \" (\", user.state, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: user.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: user.mobilenumber\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: user.carId.length\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: user.membership === true ? \"Yes\" : \"No\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: user.membershipexpiry\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: [/*#__PURE__*/_jsxDEV(Button, {\n                  color: \"secondary\",\n                  variant: \"contained\",\n                  onClick: () => deleteuser(user._id),\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 41\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n        rowsPerPageOptions: [10, 25, 100],\n        component: \"div\",\n        count: users.length,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        onPageChange: handleChangePage,\n        onRowsPerPageChange: handleChangeRowsPerPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Userlist, \"H050eSnxXUETtlj6or/2QXCLzxQ=\");\n\n_c = Userlist;\n\nvar _c;\n\n$RefreshReg$(_c, \"Userlist\");","map":{"version":3,"sources":["G:/sellyourcar/frontend/src/components/Admin/Userlist/Userlist.js"],"names":["React","useState","useEffect","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","Button","Grid","Navbar","fetchAllUsers","deleteUser","Userlist","page","setPage","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","data","setData","users","setUsers","fetchallusers","responce","console","log","allUsers","_id","deleteuser","id","srno","padding","width","marginBottom","backgroundColor","overflow","maxHeight","map","user","username","fullname","district","state","email","mobilenumber","carId","length","membership","membershipexpiry"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAIA;AACA;AACA;AACA;AACA;AAcA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAQA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,eAAP,MAA4B,+BAA5B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAASC,aAAT,EAAwBC,UAAxB,QAA0C,qBAA1C;;;AAOA,eAAe,SAASC,QAAT,GAAoB;AAAA;;AAC/B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBlB,KAAK,CAACC,QAAN,CAAe,CAAf,CAAxB;AACA,QAAM,CAACkB,WAAD,EAAcC,cAAd,IAAgCpB,KAAK,CAACC,QAAN,CAAe,EAAf,CAAtC;;AAEA,QAAMoB,gBAAgB,GAAG,CAACC,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","sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import { fetchAllUsers, deleteUser } from '../../../api/Api.js';\r\n// import Navbar from '../AdminNavbar/AdminNavbar';\r\n// import {\r\n//     Table,\r\n//     TableHead,\r\n//     TableCell,\r\n//     TableRow,\r\n//     Button,\r\n//     TableBody,\r\n//     makeStyles,\r\n// } from \"@material-ui/core\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\n// const useStyles = makeStyles({\r\n//     table: {\r\n//         width: \"90%\",\r\n//         margin: \"50px 0 0 50px\",\r\n//     },\r\n//     thead: {\r\n//         \"& > *\": {\r\n//             fontSize: 20,\r\n//             background: \"#000000\",\r\n//             color: \"#FFFFFF\",\r\n//         },\r\n//     },\r\n//     row: {\r\n//         \"& > *\": {\r\n//             fontSize: 18,\r\n//         },\r\n//     },\r\n// });\r\n\r\n\r\n\r\n\r\n// const Userlist = () => {\r\n\r\n// const [data, setData] = useState([]);\r\n// const [users, setUsers] = useState([]);\r\n// const classes = useStyles();\r\n\r\n\r\n// const fetchallusers = async () => {\r\n//     const responce = await fetchAllUsers();\r\n//     // console.log(responce);\r\n//     console.log(responce.data);\r\n//     const allUsers = responce.data;\r\n//     setUsers( allUsers );\r\n//     // console.log(data);\r\n// }\r\n\r\n// useEffect(() => {\r\n//     fetchallusers();\r\n// }, []);\r\n\r\n// console.log(\"users \", users);\r\n// console.log(\"users membership\", users._id);\r\n\r\n\r\n\r\n// const deleteuser = async (id) => {\r\n//     console.log(\"delete user id \", id);\r\n//     const responce = await deleteUser(id)\r\n//     console.log(responce.data);\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//     let sr_no = 1;\r\n\r\n\r\n\r\n//     return (\r\n//         <>\r\n//         <Navbar/>\r\n//         <Table className={classes.table}>\r\n//                 <TableHead>\r\n//                     <TableRow className={classes.thead}>\r\n//                         <TableCell>Sr.No.</TableCell>\r\n//                         {/* <TableCell>UserId</TableCell> */}\r\n// <TableCell>Username</TableCell>\r\n// <TableCell>FullName</TableCell>\r\n// <TableCell>Address</TableCell>\r\n// <TableCell>Email</TableCell>\r\n// <TableCell>Phone</TableCell>\r\n// <TableCell>Cars</TableCell>\r\n// <TableCell>Membership</TableCell>\r\n// <TableCell>Membership Expiry</TableCell>\r\n// <TableCell>Action</TableCell>\r\n//                     </TableRow>\r\n//                 </TableHead>\r\n//                 <TableBody>\r\n//                     {users.map((user) => (\r\n//                         <TableRow className={classes.row}>\r\n//                             <TableCell>{sr_no++}</TableCell>\r\n//                             {/* <TableCell>{user._id}</TableCell> */}\r\n//                             <TableCell>{user.username}</TableCell>\r\n//                             <TableCell>{user.fullname}</TableCell>\r\n//                             <TableCell>{user.district } ({user.state})</TableCell>\r\n//                             <TableCell>{user.email}</TableCell>\r\n//                             <TableCell>{user.mobilenumber}</TableCell>\r\n//                             <TableCell>{user.carId.length}</TableCell>\r\n//                             <TableCell>{user.membership === true ? \"Yes\" :\"No\" }</TableCell>\r\n//                             <TableCell>{user.membershipexpiry}</TableCell>\r\n//                             {/* <TableCell>{user.membershipexpiry.getFullYear() ,+'-' + (user.membershipexpiry.getMonth()+1) + '-'+user.membershipexpiry.getDate()}</TableCell> */}\r\n\r\n//                             <TableCell>\r\n//                                 {/* <Button\r\n//                                     color=\"primary\"\r\n//                                     variant=\"contained\"\r\n//                                     style={{ marginRight: 10 }}\r\n//                                     component={Link}\r\n//                                     to={`/edit/${user._id}`}\r\n//                                 >\r\n//                                     Edit\r\n//                                 </Button>{\" \"} */}\r\n//                                 {/* change it to user.id to use JSON Server */}\r\n//                                 <Button\r\n//                                     color=\"secondary\"\r\n//                                     variant=\"contained\"\r\n//                                     onClick={() =>  deleteuser(user._id)}\r\n//                                 >\r\n//                                     Delete\r\n//                                 </Button>{\" \"}\r\n//                             </TableCell>\r\n//                         </TableRow>\r\n//                     ))}\r\n//                 </TableBody>\r\n//             </Table>\r\n//         </>\r\n//     )\r\n// }\r\n\r\n// export default Userlist;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport Paper from '@mui/material/Paper';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport { Button } from '@material-ui/core';\r\nimport Grid from '@mui/material/Grid';\r\nimport Navbar from '../AdminNavbar/AdminNavbar';\r\nimport { fetchAllUsers, deleteUser } from '../../../api/Api.js';\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function Userlist() {\r\n    const [page, setPage] = React.useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n\r\n    const [data, setData] = useState([]);\r\n    const [users, setUsers] = useState([]);\r\n\r\n\r\n    const fetchallusers = async () => {\r\n        const responce = await fetchAllUsers();\r\n        // console.log(responce);\r\n        console.log(responce.data);\r\n        const allUsers = responce.data;\r\n        setUsers(allUsers);\r\n        // console.log(data);\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchallusers();\r\n    }, []);\r\n\r\n    console.log(\"users \", users);\r\n    console.log(\"users membership\", users._id);\r\n\r\n\r\n\r\n    const deleteuser = async (id) => {\r\n        console.log(\"delete user id \", id);\r\n        const responce = await deleteUser(id)\r\n        console.log(responce.data);\r\n    }\r\n\r\n\r\n\r\n\r\n    let srno = 1\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <Grid container style={{ padding: '20px', width: \"100%\", marginBottom: 'none', backgroundColor: \"#7900FF\" }} >\r\n                <h2>User List</h2>\r\n            </Grid>\r\n            <Paper sx={{ width: '100%', overflow: 'hidden' }}>\r\n                <TableContainer sx={{ maxHeight: 540 }}>\r\n                    <Table stickyHeader aria-label=\"sticky table\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                {/* {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))} */}\r\n\r\n\r\n                                <TableCell>Sr.No</TableCell>\r\n                                <TableCell>Username</TableCell>\r\n                                <TableCell>FullName</TableCell>\r\n                                <TableCell>Address</TableCell>\r\n                                <TableCell>Email</TableCell>\r\n                                <TableCell>Phone</TableCell>\r\n                                <TableCell>Cars</TableCell>\r\n                                <TableCell>Membership</TableCell>\r\n                                <TableCell>Membership Expiry</TableCell>\r\n                                <TableCell>Action</TableCell>\r\n\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n\r\n\r\n\r\n\r\n                            {users.map((user) => (\r\n                                <TableRow >\r\n                                    <TableCell>{srno++}</TableCell>\r\n                                    {/* <TableCell>{user._id}</TableCell> */}\r\n                                    <TableCell>{user.username}</TableCell>\r\n                                    <TableCell>{user.fullname}</TableCell>\r\n                                    <TableCell>{user.district} ({user.state})</TableCell>\r\n                                    <TableCell>{user.email}</TableCell>\r\n                                    <TableCell>{user.mobilenumber}</TableCell>\r\n                                    <TableCell>{user.carId.length}</TableCell>\r\n                                    <TableCell>{user.membership === true ? \"Yes\" : \"No\"}</TableCell>\r\n                                    <TableCell>{user.membershipexpiry}</TableCell>\r\n                                    {/* <TableCell>{user.membershipexpiry.getFullYear() ,+'-' + (user.membershipexpiry.getMonth()+1) + '-'+user.membershipexpiry.getDate()}</TableCell> */}\r\n\r\n                                    <TableCell>\r\n                                        {/* <Button\r\n                                    color=\"primary\"\r\n                                    variant=\"contained\"\r\n                                    style={{ marginRight: 10 }}\r\n                                    component={Link}\r\n                                    to={`/edit/${user._id}`}\r\n                                >\r\n                                    Edit\r\n                                </Button>{\" \"} */}\r\n                                        {/* change it to user.id to use JSON Server */}\r\n                                        <Button\r\n                                            color=\"secondary\"\r\n                                            variant=\"contained\"\r\n                                            onClick={() => deleteuser(user._id)}\r\n                                        >\r\n                                            Delete\r\n                                        </Button>{\" \"}\r\n                                    </TableCell>\r\n                                </TableRow>\r\n                            ))}\r\n\r\n\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n                <TablePagination\r\n                    rowsPerPageOptions={[10, 25, 100]}\r\n                    component=\"div\"\r\n                    count={users.length}\r\n                    rowsPerPage={rowsPerPage}\r\n                    page={page}\r\n                    onPageChange={handleChangePage}\r\n                    onRowsPerPageChange={handleChangeRowsPerPage}\r\n                />\r\n            </Paper>\r\n\r\n        </>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}