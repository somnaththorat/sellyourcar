{"ast":null,"code":"var _jsxFileName = \"G:\\\\sellyourcar\\\\frontend\\\\src\\\\components\\\\Admin\\\\Userlist\\\\Userlist.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { fetchAllUsers } from '../../../api/Api.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Userlist = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n\n  const fetchallusers = async () => {\n    const responce = await fetchAllUsers(); // console.log(responce);\n\n    console.log(responce.data);\n    const allUsers = responce.data;\n    setData({\n      allUsers\n    }); // console.log(data);\n  };\n\n  useEffect(() => {\n    fetchallusers();\n  }, []);\n  console.log(\"data \", data);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      className: classes.table,\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          className: classes.thead,\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Sr.No.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Id from Database\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Phone\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Action\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: users.map(user => /*#__PURE__*/_jsxDEV(TableRow, {\n          className: classes.row,\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: sr_no++\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: user._id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: user.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: user.phone\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              variant: \"contained\",\n              style: {\n                marginRight: 10\n              },\n              component: Link,\n              to: `/edit/${user._id}`,\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 33\n            }, this), \" \", /*#__PURE__*/_jsxDEV(Button, {\n              color: \"secondary\",\n              variant: \"contained\",\n              onClick: () => deleteUserData(user._id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 33\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n\n_s(Userlist, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n\n_c = Userlist;\nexport default Userlist;\n\nvar _c;\n\n$RefreshReg$(_c, \"Userlist\");","map":{"version":3,"sources":["G:/sellyourcar/frontend/src/components/Admin/Userlist/Userlist.js"],"names":["React","useEffect","useState","fetchAllUsers","Userlist","data","setData","fetchallusers","responce","console","log","allUsers","classes","table","thead","users","map","user","row","sr_no","_id","name","username","email","phone","marginRight","Link","deleteUserData"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { fetchAllUsers } from '../../../api/Api.js';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Userlist = () => {\r\n\r\n    const [data, setData] = useState([]);\r\n\r\n\r\n    const fetchallusers = async () => {\r\n        const responce = await fetchAllUsers();\r\n        // console.log(responce);\r\n        console.log(responce.data);\r\n        const allUsers = responce.data;\r\n        setData({ allUsers });\r\n        // console.log(data);\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchallusers();\r\n    }, []);\r\n\r\n    console.log(\"data \", data);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n        <Table className={classes.table}>\r\n                <TableHead>\r\n                    <TableRow className={classes.thead}>\r\n                        <TableCell>Sr.No.</TableCell>\r\n                        <TableCell>Id from Database</TableCell>\r\n                        <TableCell>Name</TableCell>\r\n                        <TableCell>Username</TableCell>\r\n                        <TableCell>Email</TableCell>\r\n                        <TableCell>Phone</TableCell>\r\n                        <TableCell>Action</TableCell>\r\n                    </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                    {users.map((user) => (\r\n                        <TableRow className={classes.row}>\r\n                            <TableCell>{sr_no++}</TableCell>\r\n                            <TableCell>{user._id}</TableCell>\r\n                            <TableCell>{user.name}</TableCell>\r\n                            <TableCell>{user.username}</TableCell>\r\n                            <TableCell>{user.email}</TableCell>\r\n                            <TableCell>{user.phone}</TableCell>\r\n                            <TableCell>\r\n                                <Button\r\n                                    color=\"primary\"\r\n                                    variant=\"contained\"\r\n                                    style={{ marginRight: 10 }}\r\n                                    component={Link}\r\n                                    to={`/edit/${user._id}`}\r\n                                >\r\n                                    Edit\r\n                                </Button>{\" \"}\r\n                                {/* change it to user.id to use JSON Server */}\r\n                                <Button\r\n                                    color=\"secondary\"\r\n                                    variant=\"contained\"\r\n                                    onClick={() => deleteUserData(user._id)}\r\n                                >\r\n                                    Delete\r\n                                </Button>{\" \"}\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    ))}\r\n                </TableBody>\r\n            </Table>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Userlist;\r\n"]},"metadata":{},"sourceType":"module"}