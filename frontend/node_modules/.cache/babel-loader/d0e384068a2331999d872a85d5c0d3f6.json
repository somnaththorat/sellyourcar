{"ast":null,"code":"var _jsxFileName = \"G:\\\\sellyourcar\\\\frontend\\\\src\\\\components\\\\Admin\\\\Userlist\\\\Userlist.js\",\n    _s = $RefreshSig$();\n\n// import React, { useEffect, useState } from 'react';\n// import { fetchAllUsers, deleteUser } from '../../../api/Api.js';\n// import Navbar from '../AdminNavbar/AdminNavbar';\n// import {\n//     Table,\n//     TableHead,\n//     TableCell,\n//     TableRow,\n//     Button,\n//     TableBody,\n//     makeStyles,\n// } from \"@material-ui/core\";\n// import { Link } from \"react-router-dom\";\n// const useStyles = makeStyles({\n//     table: {\n//         width: \"90%\",\n//         margin: \"50px 0 0 50px\",\n//     },\n//     thead: {\n//         \"& > *\": {\n//             fontSize: 20,\n//             background: \"#000000\",\n//             color: \"#FFFFFF\",\n//         },\n//     },\n//     row: {\n//         \"& > *\": {\n//             fontSize: 18,\n//         },\n//     },\n// });\n// const Userlist = () => {\n// const [data, setData] = useState([]);\n// const [users, setUsers] = useState([]);\n// const classes = useStyles();\n// const fetchallusers = async () => {\n//     const responce = await fetchAllUsers();\n//     // console.log(responce);\n//     console.log(responce.data);\n//     const allUsers = responce.data;\n//     setUsers( allUsers );\n//     // console.log(data);\n// }\n// useEffect(() => {\n//     fetchallusers();\n// }, []);\n// console.log(\"users \", users);\n// console.log(\"users membership\", users._id);\n// const deleteuser = async (id) => {\n//     console.log(\"delete user id \", id);\n//     const responce = await deleteUser(id)\n//     console.log(responce.data);\n// }\n//     let sr_no = 1;\n//     return (\n//         <>\n//         <Navbar/>\n//         <Table className={classes.table}>\n//                 <TableHead>\n//                     <TableRow className={classes.thead}>\n//                         <TableCell>Sr.No.</TableCell>\n//                         {/* <TableCell>UserId</TableCell> */}\n//                         <TableCell>Username</TableCell>\n//                         <TableCell>FullName</TableCell>\n//                         <TableCell>Address</TableCell>\n//                         <TableCell>Email</TableCell>\n//                         <TableCell>Phone</TableCell>\n//                         <TableCell>Cars</TableCell>\n//                         <TableCell>Membership</TableCell>\n//                         <TableCell>Membership Expiry</TableCell>\n//                         <TableCell>Action</TableCell>\n//                     </TableRow>\n//                 </TableHead>\n//                 <TableBody>\n//                     {users.map((user) => (\n//                         <TableRow className={classes.row}>\n//                             <TableCell>{sr_no++}</TableCell>\n//                             {/* <TableCell>{user._id}</TableCell> */}\n//                             <TableCell>{user.username}</TableCell>\n//                             <TableCell>{user.fullname}</TableCell>\n//                             <TableCell>{user.district } ({user.state})</TableCell>\n//                             <TableCell>{user.email}</TableCell>\n//                             <TableCell>{user.mobilenumber}</TableCell>\n//                             <TableCell>{user.carId.length}</TableCell>\n//                             <TableCell>{user.membership === true ? \"Yes\" :\"No\" }</TableCell>\n//                             <TableCell>{user.membershipexpiry}</TableCell>\n//                             {/* <TableCell>{user.membershipexpiry.getFullYear() ,+'-' + (user.membershipexpiry.getMonth()+1) + '-'+user.membershipexpiry.getDate()}</TableCell> */}\n//                             <TableCell>\n//                                 {/* <Button\n//                                     color=\"primary\"\n//                                     variant=\"contained\"\n//                                     style={{ marginRight: 10 }}\n//                                     component={Link}\n//                                     to={`/edit/${user._id}`}\n//                                 >\n//                                     Edit\n//                                 </Button>{\" \"} */}\n//                                 {/* change it to user.id to use JSON Server */}\n//                                 <Button\n//                                     color=\"secondary\"\n//                                     variant=\"contained\"\n//                                     onClick={() =>  deleteuser(user._id)}\n//                                 >\n//                                     Delete\n//                                 </Button>{\" \"}\n//                             </TableCell>\n//                         </TableRow>\n//                     ))}\n//                 </TableBody>\n//             </Table>\n//         </>\n//     )\n// }\n// export default Userlist;\nimport React, { useState, useEffect } from 'react';\nimport Paper from '@mui/material/Paper';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport Navbar from '../AdminNavbar/AdminNavbar';\nimport { fetchAllCars } from '../../../api/Api.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Carlist() {\n  _s();\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  const [data, setData] = useState([]);\n  const [users, setUsers] = useState([]);\n\n  const fetchallusers = async () => {\n    const responce = await fetchAllUsers(); // console.log(responce);\n\n    console.log(responce.data);\n    const allUsers = responce.data;\n    setUsers(allUsers); // console.log(data);\n  };\n\n  useEffect(() => {\n    fetchallusers();\n  }, []);\n  console.log(\"users \", users);\n  console.log(\"users membership\", users._id);\n\n  const deleteuser = async id => {\n    console.log(\"delete user id \", id);\n    const responce = await deleteUser(id);\n    console.log(responce.data);\n  };\n\n  let srno = 1;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        width: '100%',\n        overflow: 'hidden'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n        sx: {\n          maxHeight: 540\n        },\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          stickyHeader: true,\n          \"aria-label\": \"sticky table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Sr.No\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Car Brand\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Car Model\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Engine\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Fuel Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"transmission Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Milage\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Color\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"door\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Seats\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"airbag\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"AC\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Acceleration\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Driving range\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Owner Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: cars.map(car => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: srno++\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: car.brand\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: car.model\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: [car.engine, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: car.fuelType\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: car.transmissionType\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: [car.milage, \" /Ltr.\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: car.color\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: car.door\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: car.seats\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: car.airbag\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: car.airconditioning\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: [car.acceleration, \" sec (0-100 KM/Hr)\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: car.drivingRange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: car.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: car.price\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: car.ownerDetails.user.fullname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n        rowsPerPageOptions: [10, 25, 100],\n        component: \"div\",\n        count: cars.length,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        onPageChange: handleChangePage,\n        onRowsPerPageChange: handleChangeRowsPerPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Carlist, \"H050eSnxXUETtlj6or/2QXCLzxQ=\");\n\n_c = Carlist;\n\nvar _c;\n\n$RefreshReg$(_c, \"Carlist\");","map":{"version":3,"sources":["G:/sellyourcar/frontend/src/components/Admin/Userlist/Userlist.js"],"names":["React","useState","useEffect","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","Navbar","fetchAllCars","Carlist","page","setPage","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","data","setData","users","setUsers","fetchallusers","responce","fetchAllUsers","console","log","allUsers","_id","deleteuser","id","deleteUser","srno","width","overflow","maxHeight","cars","map","car","brand","model","engine","fuelType","transmissionType","milage","color","door","seats","airbag","airconditioning","acceleration","drivingRange","description","price","ownerDetails","user","fullname","length"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AAEI;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAIA;AACA;AACA;AACA;AACA;AAcJ;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAQA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,eAAP,MAA4B,+BAA5B;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAASC,YAAT,QAA6B,qBAA7B;;;AAMA,eAAe,SAASC,OAAT,GAAmB;AAAA;;AAChC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBf,KAAK,CAACC,QAAN,CAAe,CAAf,CAAxB;AACA,QAAM,CAACe,WAAD,EAAcC,cAAd,IAAgCjB,KAAK,CAACC,QAAN,CAAe,EAAf,CAAtC;;AAEA,QAAMiB,gBAAgB,GAAG,CAACC,KAAD,EAAQC,OAAR,KAAoB;AAC3CL,IAAAA,OAAO,CAACK,OAAD,CAAP;AACD,GAFD;;AAIA,QAA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","sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import { fetchAllUsers, deleteUser } from '../../../api/Api.js';\r\n// import Navbar from '../AdminNavbar/AdminNavbar';\r\n// import {\r\n//     Table,\r\n//     TableHead,\r\n//     TableCell,\r\n//     TableRow,\r\n//     Button,\r\n//     TableBody,\r\n//     makeStyles,\r\n// } from \"@material-ui/core\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\n// const useStyles = makeStyles({\r\n//     table: {\r\n//         width: \"90%\",\r\n//         margin: \"50px 0 0 50px\",\r\n//     },\r\n//     thead: {\r\n//         \"& > *\": {\r\n//             fontSize: 20,\r\n//             background: \"#000000\",\r\n//             color: \"#FFFFFF\",\r\n//         },\r\n//     },\r\n//     row: {\r\n//         \"& > *\": {\r\n//             fontSize: 18,\r\n//         },\r\n//     },\r\n// });\r\n\r\n\r\n\r\n\r\n// const Userlist = () => {\r\n\r\n    // const [data, setData] = useState([]);\r\n    // const [users, setUsers] = useState([]);\r\n    // const classes = useStyles();\r\n\r\n\r\n    // const fetchallusers = async () => {\r\n    //     const responce = await fetchAllUsers();\r\n    //     // console.log(responce);\r\n    //     console.log(responce.data);\r\n    //     const allUsers = responce.data;\r\n    //     setUsers( allUsers );\r\n    //     // console.log(data);\r\n    // }\r\n\r\n    // useEffect(() => {\r\n    //     fetchallusers();\r\n    // }, []);\r\n\r\n    // console.log(\"users \", users);\r\n    // console.log(\"users membership\", users._id);\r\n\r\n\r\n\r\n    // const deleteuser = async (id) => {\r\n    //     console.log(\"delete user id \", id);\r\n    //     const responce = await deleteUser(id)\r\n    //     console.log(responce.data);\r\n    // }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//     let sr_no = 1;\r\n\r\n\r\n\r\n//     return (\r\n//         <>\r\n//         <Navbar/>\r\n//         <Table className={classes.table}>\r\n//                 <TableHead>\r\n//                     <TableRow className={classes.thead}>\r\n//                         <TableCell>Sr.No.</TableCell>\r\n//                         {/* <TableCell>UserId</TableCell> */}\r\n//                         <TableCell>Username</TableCell>\r\n//                         <TableCell>FullName</TableCell>\r\n//                         <TableCell>Address</TableCell>\r\n//                         <TableCell>Email</TableCell>\r\n//                         <TableCell>Phone</TableCell>\r\n//                         <TableCell>Cars</TableCell>\r\n//                         <TableCell>Membership</TableCell>\r\n//                         <TableCell>Membership Expiry</TableCell>\r\n//                         <TableCell>Action</TableCell>\r\n//                     </TableRow>\r\n//                 </TableHead>\r\n//                 <TableBody>\r\n//                     {users.map((user) => (\r\n//                         <TableRow className={classes.row}>\r\n//                             <TableCell>{sr_no++}</TableCell>\r\n//                             {/* <TableCell>{user._id}</TableCell> */}\r\n//                             <TableCell>{user.username}</TableCell>\r\n//                             <TableCell>{user.fullname}</TableCell>\r\n//                             <TableCell>{user.district } ({user.state})</TableCell>\r\n//                             <TableCell>{user.email}</TableCell>\r\n//                             <TableCell>{user.mobilenumber}</TableCell>\r\n//                             <TableCell>{user.carId.length}</TableCell>\r\n//                             <TableCell>{user.membership === true ? \"Yes\" :\"No\" }</TableCell>\r\n//                             <TableCell>{user.membershipexpiry}</TableCell>\r\n//                             {/* <TableCell>{user.membershipexpiry.getFullYear() ,+'-' + (user.membershipexpiry.getMonth()+1) + '-'+user.membershipexpiry.getDate()}</TableCell> */}\r\n                            \r\n//                             <TableCell>\r\n//                                 {/* <Button\r\n//                                     color=\"primary\"\r\n//                                     variant=\"contained\"\r\n//                                     style={{ marginRight: 10 }}\r\n//                                     component={Link}\r\n//                                     to={`/edit/${user._id}`}\r\n//                                 >\r\n//                                     Edit\r\n//                                 </Button>{\" \"} */}\r\n//                                 {/* change it to user.id to use JSON Server */}\r\n//                                 <Button\r\n//                                     color=\"secondary\"\r\n//                                     variant=\"contained\"\r\n//                                     onClick={() =>  deleteuser(user._id)}\r\n//                                 >\r\n//                                     Delete\r\n//                                 </Button>{\" \"}\r\n//                             </TableCell>\r\n//                         </TableRow>\r\n//                     ))}\r\n//                 </TableBody>\r\n//             </Table>\r\n//         </>\r\n//     )\r\n// }\r\n\r\n// export default Userlist;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nimport React, {useState, useEffect} from 'react';\r\nimport Paper from '@mui/material/Paper';\r\nimport Table from '@mui/material/Table';\r\nimport TableBody from '@mui/material/TableBody';\r\nimport TableCell from '@mui/material/TableCell';\r\nimport TableContainer from '@mui/material/TableContainer';\r\nimport TableHead from '@mui/material/TableHead';\r\nimport TablePagination from '@mui/material/TablePagination';\r\nimport TableRow from '@mui/material/TableRow';\r\nimport Navbar from '../AdminNavbar/AdminNavbar';\r\nimport { fetchAllCars } from '../../../api/Api.js';\r\n\r\n\r\n\r\n\r\n\r\nexport default function Carlist() {\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const [data, setData] = useState([]);\r\n    const [users, setUsers] = useState([]);\r\n\r\n\r\n    const fetchallusers = async () => {\r\n        const responce = await fetchAllUsers();\r\n        // console.log(responce);\r\n        console.log(responce.data);\r\n        const allUsers = responce.data;\r\n        setUsers( allUsers );\r\n        // console.log(data);\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchallusers();\r\n    }, []);\r\n\r\n    console.log(\"users \", users);\r\n    console.log(\"users membership\", users._id);\r\n\r\n\r\n\r\n    const deleteuser = async (id) => {\r\n        console.log(\"delete user id \", id);\r\n        const responce = await deleteUser(id)\r\n        console.log(responce.data);\r\n    }\r\n\r\n\r\n\r\n\r\nlet srno = 1\r\n  return (\r\n      <>\r\n      <Navbar/>\r\n    <Paper sx={{ width: '100%', overflow: 'hidden' }}>\r\n      <TableContainer sx={{ maxHeight: 540 }}>\r\n        <Table stickyHeader aria-label=\"sticky table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              {/* {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))} */}\r\n\r\n              \r\n                        <TableCell>Sr.No</TableCell>\r\n                        <TableCell>Car Brand</TableCell>\r\n                        <TableCell>Car Model</TableCell>\r\n                        <TableCell>Engine</TableCell>\r\n                        <TableCell>Fuel Type</TableCell>\r\n                        <TableCell>transmission Type</TableCell>\r\n                        <TableCell>Milage</TableCell>\r\n                        <TableCell>Color</TableCell>\r\n                        <TableCell>door</TableCell>\r\n                        <TableCell>Seats</TableCell>\r\n                        <TableCell>airbag</TableCell>\r\n                        <TableCell>AC</TableCell>\r\n                        <TableCell>Acceleration</TableCell>\r\n                        <TableCell>Driving range</TableCell>\r\n                        <TableCell>description</TableCell>\r\n                        <TableCell>Price</TableCell>\r\n                        <TableCell>Owner Name</TableCell>\r\n\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            \r\n\r\n\r\n              \r\n                {cars.map((car) => (\r\n                    <TableRow >\r\n                        <TableCell>{srno++}</TableCell>\r\n                        {/* <TableCell>{car._id}</TableCell> */}\r\n                        <TableCell>{car.brand}</TableCell>\r\n                        <TableCell>{car.model}</TableCell>\r\n                        <TableCell>{car.engine } </TableCell>\r\n                        <TableCell>{car.fuelType}</TableCell>\r\n                        <TableCell>{car.transmissionType}</TableCell>\r\n                        <TableCell>{car.milage} /Ltr.</TableCell>\r\n                        <TableCell>{car.color}</TableCell>\r\n                        <TableCell>{car.door}</TableCell>\r\n                        <TableCell>{car.seats}</TableCell>\r\n                        <TableCell>{car.airbag}</TableCell>\r\n                        <TableCell>{car.airconditioning}</TableCell>\r\n                        <TableCell>{car.acceleration} sec (0-100 KM/Hr)</TableCell>\r\n                        <TableCell>{car.drivingRange}</TableCell>\r\n                        <TableCell>{car.description}</TableCell>\r\n                        <TableCell>{car.price}</TableCell>\r\n                        <TableCell>{car.ownerDetails.user.fullname}</TableCell>\r\n                        </TableRow>\r\n                        ))}\r\n                        \r\n\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={cars.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}